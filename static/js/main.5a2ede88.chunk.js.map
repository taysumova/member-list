{"version":3,"sources":["Form.js","Table.js","EditForm.js","App.js","index.js"],"names":["CityList","props","rows","cities","map","city","index","react_default","a","createElement","key","value","name","onChange","handleChange","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","_e$target","target","setState","defineProperty","validation","test","email","phone","onFormSubmit","preventDefault","alert","handleSubmit","state","initialState","handleValidation","memberName","memberEmail","memberPhone","handleFile","fReader","FileReader","readAsDataURL","files","onloadend","event","result","memberPhoto","eventCity","refs","focus","_this$state","_this$validation","onSubmit","className","type","ref","placeholder","onBlur","required","onClick","Form_CityList","Component","TableHeader","MembersList","membersData","row","img","height","width","alt","src","noImg","editMemberInfo","removeMember","Table","_this$props","Table_TableHeader","Table_MembersList","EditForm","onFormSave","handleEdit","editInfo","closeForm","EditForm_CityList","App","memberData","concat","toConsumableArray","editMode","memberIndex","splice","member","filter","i","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","localStorage","hasOwnProperty","getItem","JSON","parse","setItem","stringify","src_Form","src_Table","src_EditForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a2ede88.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst CityList = (props) => {\r\n    const rows = props.cities.map((city, index) => {\r\n        return (\r\n            <option key={index} value={city}>{city}</option>\r\n        );\r\n    });\r\n    return <select name=\"eventCity\" onChange={props.handleChange}>{rows}</select>;\r\n}\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            memberName: '',\r\n            memberEmail: '',\r\n            memberPhone: '',\r\n            memberPhoto: '',\r\n            eventCity: ''\r\n        };\r\n\r\n        this.validation = {\r\n            name: true,\r\n            email: true,\r\n            phone: true\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.memberName.focus();\r\n    }\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        let nameRegExp = /^[a-zа-яё\\s]+$/i,\r\n            emailRegExp = /^\\w{2,}[.-]?\\w{2,}@mail.ru$/,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if(name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(value) ? false : true;\r\n        }\r\n    };\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault();\r\n        if(this.validation.name && this.validation.phone && this.validation.email) {\r\n            alert(\"Участник добавлен\");\r\n            this.props.handleSubmit(this.state);\r\n            this.setState(this.initialState);\r\n        } else {\r\n            alert(\"Заполните корректно поля\");\r\n        }\r\n    };\r\n\r\n    handleValidation = e => {\r\n        const {name} = e.target;\r\n        let nameRegExp = /^[a-zа-яё\\s]{2,}$/i,\r\n            emailRegExp = /^\\w{2,}[.-]?\\w{2,}@mail.ru$/,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if(name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(this.state.memberName) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(this.state.memberEmail) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(this.state.memberPhone) ? false : true;\r\n        }\r\n    };\r\n\r\n    handleFile = e => {\r\n        const {name} = e.target;\r\n        let fReader = new FileReader();\r\n        fReader.readAsDataURL(e.target.files[0]);\r\n        fReader.onloadend = event => {\r\n            this.setState({\r\n                [name]: event.target.result\r\n            });\r\n        }\r\n    }\r\n    /*form will consist from number(autocomplete)*/\r\n\r\n    render() {\r\n        const {memberName, memberEmail, memberPhone} = this.state;\r\n        const {name, email, phone} = this.validation;\r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <fieldset>\r\n                    <legend>Добавить участника в группу</legend>\r\n                    <label>ФИО</label>\r\n                    <span className=\"error\">\r\n                        {name ? \"\" : \"Имя должно содержать только буквы\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        ref=\"memberName\"\r\n                        name=\"memberName\"\r\n                        placeholder=\"Иванов Иван Иванович\"\r\n                        value={memberName}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Email</label>\r\n                    <span className=\"error\">\r\n                        {email ? \"\" : \"Некорректный формат e-mail\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberEmail\"\r\n                        placeholder=\"mymail@mail.ru\"\r\n                        value={memberEmail}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Телефон</label>\r\n                    <span className=\"error\">\r\n                        {phone ? \"\" : \"Некорректный формат номера\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberPhone\"\r\n                        placeholder=\"+7(000)000-0000\"\r\n                        value={memberPhone}\r\n                        onClick={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Город для участия</label>\r\n                    <CityList cities={this.props.cities}\r\n                              handleChange={this.handleChange}/>\r\n                    <input type=\"file\"\r\n                           onChange={this.handleFile}\r\n                           name=\"memberPhoto\"/>\r\n                    <button type=\"submit\" className=\"submit-btn\">\r\n                        Добавить\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <h3>Участники:</h3>\r\n    );\r\n}\r\n\r\nconst MembersList = props => {\r\n    const rows = props.membersData.map((row, index) => {\r\n        const img = <img height=\"60\" width=\"70\" alt=\"Member\" src={row.memberPhoto}/>;\r\n        const noImg = <p className=\"noImg\">No photo</p>;\r\n        return (\r\n            <article key={index} className=\"member\">\r\n                <h4>{row.memberName}</h4>\r\n                <p>{row.eventCity}</p>\r\n                <span className=\"email\">{row.memberEmail}</span>\r\n                {row.memberPhoto ? img : noImg}\r\n                <span className=\"number\">{row.memberPhone}</span>\r\n                <div className=\"btn-wrapper\">\r\n                    <button onClick={() => props.editMemberInfo(index)} className=\"edit-btn\">&#128393;</button>\r\n                    <button onClick={() => props.removeMember(index)} className=\"delete-btn\">&#128500;\r\n                    </button>\r\n                </div>\r\n            </article>\r\n        );\r\n    });\r\n\r\n\r\n    return <div>{rows}</div>;\r\n}\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        const {membersData, editMemberInfo, removeMember} = this.props;\r\n\r\n        return (\r\n            <section>\r\n                <TableHeader/>\r\n                <MembersList membersData={membersData} editMemberInfo={editMemberInfo} removeMember={removeMember}/>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import React, {Component} from 'react';\r\n\r\nconst CityList = (props) => {\r\n    const rows = props.cities.map((city, index) => {\r\n        return (\r\n            <option key={index} value={city}>{city}</option>\r\n        );\r\n    });\r\n    return <select name=\"eventCity\" onChange={props.handleChange}>{rows}</select>;\r\n}\r\n\r\nclass EditForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            memberName: this.props.editInfo[0].memberName,\r\n            memberEmail: this.props.editInfo[0].memberEmail,\r\n            memberPhone: this.props.editInfo[0].memberPhone,\r\n            memberPhoto: this.props.editInfo[0].memberPhoto,\r\n            eventCity: this.props.editInfo[0].eventCity\r\n        };\r\n\r\n        this.validation = {\r\n            name: true,\r\n            email: true,\r\n            phone: true\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.memberName.focus();\r\n    }\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        let nameRegExp = /^[a-zа-яё\\s]+$/i,\r\n            emailRegExp = /^\\w{2,}[.-]?\\w{2,}@mail.ru$/,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if(name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(value) ? false : true;\r\n        }\r\n    };\r\n\r\n    onFormSave = e => {\r\n        e.preventDefault();\r\n        if(this.validation.name && this.validation.phone && this.validation.email) {\r\n            alert(\"Информация отредактирована\");\r\n            this.props.handleEdit(this.state);\r\n            this.setState(this.initialState);\r\n        } else {\r\n            alert(\"Заполните корректно поля\");\r\n        }\r\n    };\r\n\r\n    handleValidation = e => {\r\n        const {name} = e.target;\r\n        let nameRegExp = /^[a-zа-яё\\s]{2,}$/i,\r\n            emailRegExp = /^\\w{2,}[.-]?\\w{2,}@mail.ru$/,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if(name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(this.state.memberName) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(this.state.memberEmail) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(this.state.memberPhone) ? false : true;\r\n        }\r\n    };\r\n\r\n    handleFile = e => {\r\n        const {name} = e.target;\r\n        let fReader = new FileReader();\r\n        fReader.readAsDataURL(e.target.files[0]);\r\n        fReader.onloadend = event => {\r\n            this.setState({\r\n                [name]: event.target.result\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {memberName, memberEmail, memberPhone} = this.state;\r\n        const {name, email, phone} = this.validation;\r\n\r\n        return (\r\n            <form className=\"editForm\" onSubmit={this.onFormSave}>\r\n                <button onClick={this.props.closeForm}>X</button>\r\n                <fieldset>\r\n                    <legend>Редактировать</legend>\r\n                    <label>ФИО</label>\r\n                    <span className=\"error\">\r\n                        {name ? \"\" : \"Имя должно содержать только буквы\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        ref=\"memberName\"\r\n                        name=\"memberName\"\r\n                        placeholder=\"Иванов Иван Иванович\"\r\n                        value={memberName}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Email</label>\r\n                    <span className=\"error\">\r\n                        {email ? \"\" : \"Некорректный формат e-mail\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberEmail\"\r\n                        placeholder=\"mymail@mail.ru\"\r\n                        value={memberEmail}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Телефон</label>\r\n                    <span className=\"error\">\r\n                        {phone ? \"\" : \"Некорректный формат номера\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberPhone\"\r\n                        placeholder=\"+7(000)000-0000\"\r\n                        value={memberPhone}\r\n                        onClick={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Город для участия</label>\r\n                    <CityList cities={this.props.cities}\r\n                              handleChange={this.handleChange}/>\r\n                    <input type=\"file\"\r\n                           onChange={this.handleFile}\r\n                           name=\"memberPhoto\"/>\r\n                    <button type=\"submit\" className=\"submit-btn\">\r\n                        Сохранить\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditForm;","import React, {Component} from 'react';\r\nimport Form from './Form.js';\r\nimport Table from './Table.js';\r\nimport EditForm from \"./EditForm\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            membersData: [],\r\n            editMode: false,\r\n            editInfo: [],\r\n            cities: [\"\", \"Москва\", \"Санкт-Петербург\", \"Екатеринбург\", \"Нижний Новгород\", \"Новосибирск\", \"Казань\", \"Челябинск\", \"Омск\", \"Самара\", \"Ростов-на-Дону\"]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hydrateStateWithLocalStorage();\r\n\r\n        // add event listener to save state to localStorage\r\n        // when user leaves/refreshes the page\r\n        window.addEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n\r\n        // saves if component has a chance to unmount\r\n        this.saveStateToLocalStorage();\r\n    }\r\n\r\n    hydrateStateWithLocalStorage() {\r\n        // for all items in state\r\n        for (let key in this.state) {\r\n            // if the key exists in localStorage\r\n            if (localStorage.hasOwnProperty(key)) {\r\n                // get the key's value from localStorage\r\n                let value = localStorage.getItem(key);\r\n\r\n                // parse the localStorage string and setState\r\n                try {\r\n                    value = JSON.parse(value);\r\n                    this.setState({[key]: value});\r\n                } catch (e) {\r\n                    // handle empty string\r\n                    this.setState({[key]: value});\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    saveStateToLocalStorage() {\r\n        // for every item in React state\r\n        for (let key in this.state) {\r\n            // save to localStorage\r\n            localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n        }\r\n    }\r\n\r\n    handleSubmit = memberData => {\r\n        this.setState({membersData: [...this.state.membersData, memberData]});\r\n    }\r\n\r\n    closeForm =() => {\r\n        this.setState({\r\n            editMode: false,\r\n            editInfo: []\r\n        });\r\n    };\r\n\r\n    handleEdit = memberData => {\r\n        const memberIndex = this.state.editInfo[1];\r\n        this.state.membersData.splice([memberIndex], 1, memberData);\r\n\r\n        this.setState({\r\n            editMode: false,\r\n            editInfo: []\r\n        });\r\n    }\r\n\r\n    editMemberInfo = index => {\r\n        const {membersData} = this.state;\r\n        const member = membersData[index];\r\n\r\n        this.setState({\r\n            editMode: true,\r\n            editInfo: [member, index]});\r\n    };\r\n\r\n    removeMember = index => {\r\n        const {membersData} = this.state;\r\n\r\n        this.setState({\r\n            membersData: membersData.filter((memberData, i) => {\r\n                return i !== index;\r\n            })\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {membersData, editInfo, cities} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Form handleSubmit={this.handleSubmit}\r\n                      membersData={membersData}\r\n                      cities={cities}\r\n                />\r\n                <Table editMemberInfo={this.editMemberInfo}\r\n                       removeMember={this.removeMember}\r\n                       membersData={membersData}/>\r\n                {this.state.editMode ?\r\n                    <EditForm handleEdit={this.handleEdit}\r\n                              membersData={membersData}\r\n                              editInfo={editInfo}\r\n                              closeForm={this.closeForm}\r\n                              cities={cities}/>: \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}