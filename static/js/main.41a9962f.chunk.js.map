{"version":3,"sources":["Form.js","Table.js","EditForm.js","App.js","index.js"],"names":["CityList","props","rows","cities","map","city","index","react_default","a","createElement","key","value","name","onChange","handleChange","Form","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","_e$target","target","setState","defineProperty","validation","test","email","phone","onFormSubmit","preventDefault","alert","handleSubmit","state","initialState","handleValidation","memberName","memberEmail","memberPhone","handleFile","fReader","FileReader","readAsDataURL","files","onloadend","event","result","memberPhoto","eventCity","_this$state","_this$validation","onSubmit","className","type","placeholder","onBlur","required","Form_CityList","Component","TableHeader","MembersList","membersData","row","img","height","width","alt","src","noImg","onClick","editMemberInfo","removeMember","Table","_this$props","Table_TableHeader","Table_MembersList","EditForm","onFormSave","handleEdit","editInfo","refs","focus","closeForm","ref","EditForm_CityList","App","memberData","concat","toConsumableArray","editMode","memberIndex","splice","member","filter","i","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","localStorage","hasOwnProperty","getItem","JSON","parse","setItem","stringify","src_Form","src_Table","src_EditForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.41a9962f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst CityList = (props) => {\r\n    const rows = props.cities.map((city, index) => {\r\n        return (\r\n            <option key={index} value={city}>{city}</option>\r\n        );\r\n    });\r\n    return <select name=\"eventCity\" onChange={props.handleChange}>{rows}</select>;\r\n}\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            memberName: '',\r\n            memberEmail: '',\r\n            memberPhone: '',\r\n            memberPhoto: '',\r\n            eventCity: ''\r\n        };\r\n\r\n        this.validation = {\r\n            name: true,\r\n            email: true,\r\n            phone: true\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        let nameRegExp = /^[a-zа-яё\\s]+$/i,\r\n            emailRegExp = /^\\w{2,}[.-]?\\w{2,}@mail.ru$/,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if(name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(value) ? false : true;\r\n        }\r\n    };\r\n\r\n    onFormSubmit = e => {\r\n        e.preventDefault();\r\n        if(this.validation.name && this.validation.phone && this.validation.email) {\r\n            alert(\"Участник добавлен\");\r\n            this.props.handleSubmit(this.state);\r\n            this.setState(this.initialState);\r\n        } else {\r\n            alert(\"Заполните корректно поля\");\r\n        }\r\n    };\r\n\r\n    handleValidation = e => {\r\n        const {name} = e.target;\r\n        let nameRegExp = /^[a-zа-яё\\s]{2,}$/i,\r\n            emailRegExp = /[A-Z0-9._%+-]+@[A-Z0-9-]+\\.[A-Z]{2,4}/igm,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if(name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(this.state.memberName) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(this.state.memberEmail) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(this.state.memberPhone) ? false : true;\r\n        }\r\n    };\r\n\r\n    handleFile = e => {\r\n        const {name} = e.target;\r\n        let fReader = new FileReader();\r\n        fReader.readAsDataURL(e.target.files[0]);\r\n        fReader.onloadend = event => {\r\n            this.setState({\r\n                [name]: event.target.result\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {memberName, memberEmail, memberPhone} = this.state;\r\n        const {name, email, phone} = this.validation;\r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <fieldset>\r\n                    <legend>Добавить участника в группу</legend>\r\n                    <label>ФИО</label>\r\n                    <span className=\"error\">\r\n                        {name ? \"\" : \"Имя должно содержать только буквы\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberName\"\r\n                        placeholder=\"Иванов Иван Иванович\"\r\n                        value={memberName}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Email</label>\r\n                    <span className=\"error\">\r\n                        {email ? \"\" : \"Некорректный формат e-mail\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberEmail\"\r\n                        placeholder=\"mymail@mail.ru\"\r\n                        value={memberEmail}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Телефон</label>\r\n                    <span className=\"error\">\r\n                        {phone ? \"\" : \"Некорректный формат номера\"}\r\n                    </span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberPhone\"\r\n                        placeholder=\"+7(000)000-0000\"\r\n                        value={memberPhone}\r\n                        onBlur={this.handleValidation}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Город для участия</label>\r\n                    <CityList cities={this.props.cities}\r\n                              handleChange={this.handleChange}/>\r\n                    <input type=\"file\"\r\n                           onChange={this.handleFile}\r\n                           name=\"memberPhoto\"/>\r\n                    <button type=\"submit\" className=\"submit-btn\">\r\n                        Добавить\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <h3>Участники:</h3>\r\n    );\r\n}\r\n\r\nconst MembersList = props => {\r\n    const rows = props.membersData.map((row, index) => {\r\n        const img = <img height=\"60\" width=\"70\" alt=\"Member\" src={row.memberPhoto}/>;\r\n        const noImg = <p className=\"noImg\">No photo</p>;\r\n        return (\r\n            <article key={index} className=\"member\">\r\n                <h4>{row.memberName}</h4>\r\n                <p>{row.eventCity}</p>\r\n                <span className=\"email\">{row.memberEmail}</span>\r\n                {row.memberPhoto ? img : noImg}\r\n                <span className=\"number\">{row.memberPhone}</span>\r\n                <div className=\"btn-wrapper\">\r\n                    <button onClick={() => props.editMemberInfo(index)} className=\"edit-btn\">&#128393;</button>\r\n                    <button onClick={() => props.removeMember(index)} className=\"delete-btn\">&#128500;\r\n                    </button>\r\n                </div>\r\n            </article>\r\n        );\r\n    });\r\n\r\n\r\n    return <div>{rows}</div>;\r\n}\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        const {membersData, editMemberInfo, removeMember} = this.props;\r\n\r\n        return (\r\n            <section>\r\n                <TableHeader/>\r\n                <MembersList membersData={membersData} editMemberInfo={editMemberInfo} removeMember={removeMember}/>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import React, {Component} from 'react';\r\n\r\nconst CityList = (props) => {\r\n    const rows = props.cities.map((city, index) => {\r\n        return (\r\n            <option key={index} value={city}>{city}</option>\r\n        );\r\n    });\r\n    return <select name=\"eventCity\" onChange={props.handleChange}>{rows}</select>;\r\n}\r\n\r\nclass EditForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            memberName: this.props.editInfo[0].memberName,\r\n            memberEmail: this.props.editInfo[0].memberEmail,\r\n            memberPhone: this.props.editInfo[0].memberPhone,\r\n            memberPhoto: this.props.editInfo[0].memberPhoto,\r\n            eventCity: this.props.editInfo[0].eventCity\r\n        };\r\n\r\n        this.validation = {\r\n            name: true,\r\n            email: true,\r\n            phone: true\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.memberName.focus();\r\n    }\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        let nameRegExp = /^[a-zа-яё\\s]+$/i,\r\n            emailRegExp = /^\\w{2,}[.-]?\\w{2,}@mail.ru$/,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if (name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(value) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(value) ? false : true;\r\n        }\r\n    };\r\n\r\n    onFormSave = e => {\r\n        e.preventDefault();\r\n        if (this.validation.name && this.validation.phone && this.validation.email) {\r\n            alert(\"Информация отредактирована\");\r\n            this.props.handleEdit(this.state);\r\n            this.setState(this.initialState);\r\n        } else {\r\n            alert(\"Заполните корректно поля\");\r\n        }\r\n    };\r\n\r\n    handleValidation = e => {\r\n        const {name} = e.target;\r\n        let nameRegExp = /^[a-zа-яё\\s]{2,}$/i,\r\n            emailRegExp = /[A-Z0-9._%+-]+@[A-Z0-9-]+\\.[A-Z]{2,4}/igm,\r\n            phoneRegExp = /^\\+7\\([\\d]{3}\\)[\\d]{3}-[\\d]{4}$/i;\r\n\r\n        if (name === \"memberName\") {\r\n            this.validation.name = !nameRegExp.test(this.state.memberName) ? false : true;\r\n        } else if (name === \"memberEmail\") {\r\n            this.validation.email = !emailRegExp.test(this.state.memberEmail) ? false : true;\r\n        } else if (name === \"memberPhone\") {\r\n            this.validation.phone = !phoneRegExp.test(this.state.memberPhone) ? false : true;\r\n        }\r\n    };\r\n\r\n    handleFile = e => {\r\n        const {name} = e.target;\r\n        let fReader = new FileReader();\r\n        fReader.readAsDataURL(e.target.files[0]);\r\n        fReader.onloadend = event => {\r\n            this.setState({\r\n                [name]: event.target.result\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {memberName, memberEmail, memberPhone} = this.state;\r\n        const {name, email, phone} = this.validation;\r\n\r\n        return (\r\n            <div className=\"editFormContainer\">\r\n                <form className=\"editForm\" onSubmit={this.onFormSave}>\r\n                    <button className=\"close-btn\" onClick={this.props.closeForm}>&times;</button>\r\n                    <fieldset>\r\n                        <legend>Редактировать</legend>\r\n                        <label>ФИО</label>\r\n                        <span className=\"error\">\r\n                        {name ? \"\" : \"Имя должно содержать только буквы\"}\r\n                    </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            ref=\"memberName\"\r\n                            name=\"memberName\"\r\n                            placeholder=\"Иванов Иван Иванович\"\r\n                            value={memberName}\r\n                            onBlur={this.handleValidation}\r\n                            onChange={this.handleChange}\r\n                            required/>\r\n                        <label>Email</label>\r\n                        <span className=\"error\">\r\n                        {email ? \"\" : \"Некорректный формат e-mail\"}\r\n                    </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"memberEmail\"\r\n                            placeholder=\"mymail@mail.ru\"\r\n                            value={memberEmail}\r\n                            onBlur={this.handleValidation}\r\n                            onChange={this.handleChange}\r\n                            required/>\r\n                        <label>Телефон</label>\r\n                        <span className=\"error\">\r\n                        {phone ? \"\" : \"Некорректный формат номера\"}\r\n                    </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"memberPhone\"\r\n                            placeholder=\"+7(000)000-0000\"\r\n                            value={memberPhone}\r\n                            onBlur={this.handleValidation}\r\n                            onChange={this.handleChange}\r\n                            required/>\r\n                        <label>Город для участия</label>\r\n                        <CityList cities={this.props.cities}\r\n                                  handleChange={this.handleChange}/>\r\n                        <input type=\"file\"\r\n                               onChange={this.handleFile}\r\n                               name=\"memberPhoto\"/>\r\n                        <button type=\"submit\" className=\"submit-btn\">\r\n                            Сохранить\r\n                        </button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditForm;","import React, {Component} from 'react';\r\nimport Form from './Form.js';\r\nimport Table from './Table.js';\r\nimport EditForm from \"./EditForm\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            membersData: [],\r\n            editMode: false,\r\n            editInfo: [],\r\n            cities: [\"\", \"Москва\", \"Санкт-Петербург\", \"Екатеринбург\", \"Нижний Новгород\", \"Новосибирск\", \"Казань\", \"Челябинск\", \"Омск\", \"Самара\", \"Ростов-на-Дону\"]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hydrateStateWithLocalStorage();\r\n\r\n        // add event listener to save state to localStorage\r\n        // when user leaves/refreshes the page\r\n        window.addEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n\r\n        // saves if component has a chance to unmount\r\n        this.saveStateToLocalStorage();\r\n    }\r\n\r\n    hydrateStateWithLocalStorage() {\r\n        // for all items in state\r\n        for (let key in this.state) {\r\n            // if the key exists in localStorage\r\n            if (localStorage.hasOwnProperty(key)) {\r\n                // get the key's value from localStorage\r\n                let value = localStorage.getItem(key);\r\n\r\n                // parse the localStorage string and setState\r\n                try {\r\n                    value = JSON.parse(value);\r\n                    this.setState({[key]: value});\r\n                } catch (e) {\r\n                    // handle empty string\r\n                    this.setState({[key]: value});\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    saveStateToLocalStorage() {\r\n        // for every item in React state\r\n        for (let key in this.state) {\r\n            // save to localStorage\r\n            localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n        }\r\n    }\r\n\r\n    handleSubmit = memberData => {\r\n        this.setState({membersData: [...this.state.membersData, memberData]});\r\n    }\r\n\r\n    closeForm =() => {\r\n        this.setState({\r\n            editMode: false,\r\n            editInfo: []\r\n        });\r\n    };\r\n\r\n    handleEdit = memberData => {\r\n        const memberIndex = this.state.editInfo[1];\r\n        this.state.membersData.splice([memberIndex], 1, memberData);\r\n\r\n        this.setState({\r\n            editMode: false,\r\n            editInfo: []\r\n        });\r\n    }\r\n\r\n    editMemberInfo = index => {\r\n        const {membersData} = this.state;\r\n        const member = membersData[index];\r\n\r\n        this.setState({\r\n            editMode: true,\r\n            editInfo: [member, index]});\r\n    };\r\n\r\n    removeMember = index => {\r\n        const {membersData} = this.state;\r\n\r\n        this.setState({\r\n            membersData: membersData.filter((memberData, i) => {\r\n                return i !== index;\r\n            })\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {membersData, editInfo, cities} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Form handleSubmit={this.handleSubmit}\r\n                      membersData={membersData}\r\n                      cities={cities}\r\n                />\r\n                <Table editMemberInfo={this.editMemberInfo}\r\n                       removeMember={this.removeMember}\r\n                       membersData={membersData}/>\r\n                {this.state.editMode ?\r\n                    <EditForm handleEdit={this.handleEdit}\r\n                              membersData={membersData}\r\n                              editInfo={editInfo}\r\n                              closeForm={this.closeForm}\r\n                              cities={cities}/>: \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}