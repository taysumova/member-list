{"version":3,"sources":["Form.js","Table.js","App.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","name","value","setState","defineProperty","onFormSubmit","preventDefault","handleSubmit","state","initialState","handleValidation","memberName","memberCity","memberPhone","refs","focus","_this$state","react_default","a","createElement","onSubmit","type","ref","placeholder","onChange","required","className","Component","TableHeader","MembersList","rows","membersData","map","row","index","key","onClick","removeMember","Table","_this$props","editMemberInfo","Table_TableHeader","Table_MembersList","App","memberData","concat","toConsumableArray","editAd","formTitle","document","getElementsByTagName","formCity","formNumber","console","log","filter","i","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","localStorage","hasOwnProperty","getItem","JSON","parse","e","setItem","stringify","src_Form","src_Table","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.2c86dbaa.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            memberName: '',\r\n            memberCity: '',\r\n            memberPhone: ''\r\n        };\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.memberName.focus();\r\n    }\r\n\r\n    handleChange = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    handleValidation = event => {\r\n\r\n    }\r\n\r\n/*    handleEdit = () => {\r\n        //const { index } = event.target;\r\n        this.props.editMemberInfo(5);\r\n        console.log(\"try\");\r\n    }*/\r\n\r\n    render() {\r\n        const {memberName, memberCity, memberPhone} = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <fieldset>\r\n                    <legend>Добавить участника в группу</legend>\r\n                    <label>ФИО</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        ref=\"memberName\"\r\n                        name=\"memberName\"\r\n                        placeholder=\"Иванов Иван Иванович\"\r\n                        value={memberName}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <label>Город проживания</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberCity\"\r\n                        placeholder=\"Москва\"\r\n                        value={memberCity}\r\n                        onChange={this.handleChange}/>\r\n                    <label>Телефон</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"memberPhone\"\r\n                        placeholder=\"+7(901) 100-00-00\"\r\n                        value={memberPhone}\r\n                        onChange={this.handleChange}\r\n                        required/>\r\n                    <button type=\"submit\" className=\"submit-btn\">\r\n                        Добавить\r\n                    </button>\r\n                </fieldset>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, {Component} from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <h3>Участники:</h3>\r\n    );\r\n}\r\n\r\nconst MembersList = props => {\r\n    const rows = props.membersData.map((row, index) => {\r\n        return (\r\n            <article key={index} className=\"member\">\r\n                <h4>{row.memberName}</h4>\r\n                <p>{row.memberCity}</p>\r\n                <span className=\"number\">{row.memberPhone}</span>\r\n                <div className=\"btn-wrapper\">\r\n                    {/*<button onClick={() => props.editMemberInfo(index)} className=\"edit-btn\">&#128393;</button>*/}\r\n                    <button onClick={() => props.removeMember(index)} className=\"delete-btn\">&#128500;\r\n                    </button>\r\n                </div>\r\n            </article>\r\n        );\r\n    });\r\n\r\n\r\n    return <div>{rows}</div>;\r\n}\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        const {membersData, editMemberInfo, removeMember} = this.props;\r\n\r\n        return (\r\n            <section>\r\n                <TableHeader/>\r\n                <MembersList membersData={membersData} editMemberInfo={editMemberInfo} removeMember={removeMember}/>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n","import React, {Component} from 'react';\r\nimport Form from './Form.js';\r\nimport Table from './Table.js';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            membersData: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hydrateStateWithLocalStorage();\r\n\r\n        // add event listener to save state to localStorage\r\n        // when user leaves/refreshes the page\r\n        window.addEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\r\n            \"beforeunload\",\r\n            this.saveStateToLocalStorage.bind(this)\r\n        );\r\n\r\n        // saves if component has a chance to unmount\r\n        this.saveStateToLocalStorage();\r\n    }\r\n\r\n    hydrateStateWithLocalStorage() {\r\n        // for all items in state\r\n        for (let key in this.state) {\r\n            // if the key exists in localStorage\r\n            if (localStorage.hasOwnProperty(key)) {\r\n                // get the key's value from localStorage\r\n                let value = localStorage.getItem(key);\r\n\r\n                // parse the localStorage string and setState\r\n                try {\r\n                    value = JSON.parse(value);\r\n                    this.setState({[key]: value});\r\n                } catch (e) {\r\n                    // handle empty string\r\n                    this.setState({[key]: value});\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    saveStateToLocalStorage() {\r\n        // for every item in React state\r\n        for (let key in this.state) {\r\n            // save to localStorage\r\n            localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n        }\r\n    }\r\n\r\n    handleSubmit = memberData => {\r\n        this.setState({membersData: [...this.state.membersData, memberData]});\r\n    }\r\n\r\n    editAd = index => {\r\n        const {membersData} = this.state;\r\n        const formTitle = document.getElementsByTagName('input')[0];\r\n        const formCity = document.getElementsByTagName('input')[1];\r\n        const formNumber = document.getElementsByTagName('input')[2];\r\n        formTitle.value = membersData[index].memberName;\r\n        formCity.value = membersData[index].memberCity;\r\n        formNumber.value = membersData[index].memberPhone;\r\n        console.log(membersData[index]);\r\n        formTitle.focus();\r\n    }\r\n\r\n    removeMember = index => {\r\n        const {membersData} = this.state;\r\n\r\n        this.setState({\r\n            membersData: membersData.filter((memberData, i) => {\r\n                return i !== index;\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {membersData} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <Form handleSubmit={this.handleSubmit}\r\n                      membersData={membersData}\r\n                />\r\n                <Table editMemberInfo={this.editMemberInfo}\r\n                       removeMember={this.removeMember}\r\n                       membersData={membersData}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}